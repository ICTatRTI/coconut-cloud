matchResults=document.location.pathname.match(/^\/(.*)\/_design\/(.*?)\//),Backbone.couch_connector.config.db_name=matchResults[1],Backbone.couch_connector.config.ddoc_name=matchResults[2],Backbone.couch_connector.config.global_changes=!1;var User,UserCollection,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;User=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.url="/user",e.prototype.username=function(){return this.get("_id").replace(/^user\./,"")},e.prototype.passwordIsValid=function(t){return this.get("password")===t},e.prototype.isAdmin=function(){return"admin"===this.username()},e.prototype.login=function(){return $.cookie("current_user",this.username()),$("#user").html(this.username()),$("#district").html(this.get("district")),$("a[href=#logout]").show(),$("a[href=#login]").hide(),this.isAdmin()?$("#manage-button").show():$("#manage-button").hide(),e.currentUser=this},e.prototype.refreshLogin=function(){return this.login()},e}(Backbone.Model),User.isAuthenticated=function(t){var e;return null!=$.cookie("current_user")?(e=new User({_id:"user."+$.cookie("current_user")}),e.fetch({success:function(){return e.refreshLogin(),t.success(e)},error:function(){return t.error()}})):t.error()},User.logout=function(){return $.cookie("current_user",""),$("#user").html(""),$("#district").html(""),$("a[href=#logout]").hide(),$("a[href=#login]").show(),User.currentUser=null},UserCollection=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.model=User,e.prototype.url="/user",e}(Backbone.Collection);var Config,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;Config=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.set({_id:"coconut.config"})},e.prototype.fetch=function(t){return e.__super__.fetch.call(this,{success:function(){return Coconut.config.local=new LocalConfig,Coconut.config.local.fetch({success:function(){return"function"==typeof t.success?t.success():void 0},error:function(){return"function"==typeof t.error?t.error():void 0}})},error:function(){return"function"==typeof t.error?t.error():void 0}})},e.prototype.url="/configuration",e.prototype.title=function(){return this.get("title")||"Coconut"},e.prototype.database_name=function(){return Backbone.couch_connector.config.db_name},e.prototype.design_doc_name=function(){return Backbone.couch_connector.config.ddoc_name},e.prototype.cloud_url=function(){return""+this.get("synchronization_target")},e.prototype.cloud_url_with_credentials=function(){return this.cloud_url().replace(/http:\/\//,"http://"+this.get("cloud_credentials")+"@")},e}(Backbone.Model);var Question,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;Question=function(t){function e(){return this.summaryFieldNames=__bind(this.summaryFieldNames,this),this.resultSummaryFields=__bind(this.resultSummaryFields,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.type=function(){return this.get("type")},e.prototype.label=function(){return this.get("label")||this.get("id")||this.get("_id")},e.prototype.safeLabel=function(){return this.label().replace(/[^a-zA-Z0-9 -]/g,"").replace(/[ -]/g,"")},e.prototype.repeatable=function(){return this.get("repeatable")},e.prototype.questions=function(){return this.get("questions")},e.prototype.value=function(){return null!=this.get("value")?this.get("value"):""},e.prototype.required=function(){return null!=this.get("required")?this.get("required"):"true"},e.prototype.validation=function(){return null!=this.get("validation")?this.get("validation"):null},e.prototype.skipLogic=function(){return this.get("skip_logic")||""},e.prototype.actionOnChange=function(){return this.get("action_on_change")||""},e.prototype.attributeSafeText=function(){var t;return t=this.get(null!=this.get("label")?"label":"id"),t.replace(/[^a-zA-Z0-9]/g,"")},e.prototype.url="/question",e.prototype.set=function(t){return null!=t.questions&&(t.questions=_.map(t.questions,function(t){return new e(t)})),null!=t.id&&(t._id=t.id),e.__super__.set.call(this,t)},e.prototype.loadFromDesigner=function(t){var n,o,r,i,s,u;if(r=e.fromDomNode(t),1===r.length){for(r=r[0],this.set({id:r.id}),u=["label","type","repeatable","required","validation"],i=0,s=u.length;s>i;i++)o=u[i],n={},n[o]=r.get(o),this.set(n);return this.set({questions:r.questions()})}throw"More than one root node"},e.prototype.resultSummaryFields=function(){var t,e,n,o;return e=this.get("resultSummaryFields"),e?e:(t=Math.min(2,this.questions().length-1),n={},_.each(function(){o=[];for(var e=0;t>=0?t>=e:e>=t;t>=0?e++:e--)o.push(e);return o}.apply(this),function(t){return function(e){var o;return n[null!=(o=t.questions()[e])?o.label():void 0]="on"}}(this)),n)},e.prototype.summaryFieldNames=function(){return _.keys(this.resultSummaryFields())},e.prototype.summaryFieldKeys=function(){return _.map(this.summaryFieldNames(),function(t){return t.replace(/[^a-zA-Z0-9 -]/g,"").replace(/[ -]/g,"")})},e}(Backbone.Model),Question.fromDomNode=function(t){return _(t).chain().map(function(){return function(t){var e,n,o,r,i,s,u,a;if(t=$(t),n=t.attr("id"),t.children("#rootQuestionName").length>0&&(n=t.children("#rootQuestionName").val()),n){for(i=new Question,i.set({id:n}),a=["label","type","repeatable","select-options","radio-options","autocomplete-options","validation","required","action_on_questions_loaded","skip_logic","action_on_change","image-path","image-style"],s=0,u=a.length;u>s;s++)o=a[s],e={},r=t.find("#"+o+"-"+n).val(),"required"===o&&(r=String(t.find("#"+o+"-"+n).is(":checked"))),null!=r&&(e[o]=r,i.set(e));return i.set({safeLabel:i.safeLabel()}),t.find(".question-definition").length>0&&i.set({questions:Question.fromDomNode(t.children(".question-definition"))}),i}}}(this)).compact().value()};var QuestionCollection,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;QuestionCollection=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.model=Question,e.prototype.url="/question",e}(Backbone.Collection);var Result,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;Result=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.attributes.createdAt||this.set({createdAt:moment(new Date).format(Coconut.config.get("date_format"))}),this.attributes.lastModifiedAt?void 0:this.set({lastModifiedAt:moment(new Date).format(Coconut.config.get("date_format"))})},e.prototype.url="/result",e.prototype.question=function(){return this.get("question")},e.prototype.tags=function(){var t;return t=this.get("Tags"),null!=t?t.split(/, */):[]},e.prototype.complete=function(){var t;return _.include(this.tags(),"complete")?!0:(t=this.get("complete"),"undefined"==typeof t&&(t=this.get("Complete")),null===t||"undefined"==typeof t?!1:t===!0||t.match(/true|yes/)?!0:void 0)},e.prototype.shortString=function(){var t;return t=this.string,t.length>40?t.substring(0,40)+"...":t},e.prototype.summaryKeys=function(t){var e;return e=t.summaryFieldKeys(),0===e.length&&(e=_.difference(_.keys(this.toJSON()),["_id","_rev","complete","question","collection"])),e},e.prototype.summaryValues=function(t){return _.map(this.summaryKeys(t),function(t){return function(e){var n;return n=t.get(e)||"","object"==typeof n&&(n=JSON.stringify(n)),n}}(this))},e.prototype.get=function(t){var n,o;return o=e.__super__.get.call(this,t),null!=o&&"cloud"===Coconut.config.local.get("mode")&&(n=Coconut.config.get("identifying_attributes"),null!=n&&_.contains(n,t))?b64_sha1(o):o},e.prototype.toJSON=function(){var t;return t=e.__super__.toJSON.call(this),"cloud"===Coconut.config.local.get("mode")&&_.each(t,function(e){return function(n,o){return null!=n&&_.contains(e.identifyingAttributes,o)?t[o]=b64_sha1(n):void 0}}(this)),t},e.prototype.save=function(t,n,o){return this.set({user:$.cookie("current_user"),lastModifiedAt:moment(new Date).format(Coconut.config.get("date_format"))}),e.__super__.save.call(this,t,n,o)},e}(Backbone.Model);var ResultCollection,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;ResultCollection=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.model=Result,e.prototype.url="/result",e.prototype.db={view:"resultsByQuestionAndComplete"},e.prototype.fetch=function(t){return null==t&&(t={}),null==t.include_docs&&(t.include_docs=!0),(null!=t?t.question:void 0)&&(t.descending="true",null!=t.isComplete?(t.startkey=t.question+":"+t.isComplete+":z",t.endkey=t.question+":"+t.isComplete):(t.startkey=t.question+":z",t.endkey=t.question)),e.__super__.fetch.call(this,t)},e.prototype.notSent=function(){return this.filter(function(t){var e;return!(null!=(e=t.get("sentTo"))?e.length:void 0)})},e.prototype.filteredByQuestionCategorizedByStatus=function(t){var e;return e={},e.complete=[],e.notCompete=[],this.each(function(n){if(n.get("question")===t)switch(n.get("complete")){case!0:return e.complete.push(n);default:return e.notComplete.push(n)}}),e},e.prototype.filterByQuestionType=function(t){return this.filter(function(e){return e.get("question")===t})},e.prototype.partialResults=function(t){return this.filter(function(e){return e.get("question")===t&&!e.complete()})},e}(Backbone.Collection);var Sync,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;Sync=function(t){function e(){return this.replicateApplicationDocs=__bind(this.replicateApplicationDocs,this),this.getFromCloud=__bind(this.getFromCloud,this),this.log=__bind(this.log,this),this.last_get_time=__bind(this.last_get_time,this),this.was_last_get_successful=__bind(this.was_last_get_successful,this),this.last_send_time=__bind(this.last_send_time,this),this.was_last_send_successful=__bind(this.was_last_send_successful,this),this.last_send=__bind(this.last_send,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.set({_id:"SyncLog"})},e.prototype.url="/sync",e.prototype.target=function(){return Coconut.config.cloud_url()},e.prototype.last_send=function(){return this.get("last_send_result")},e.prototype.was_last_send_successful=function(){var t;return this.get("last_send_error")===!0?!1:(t=this.last_send(),null==t?!1:null!=t.no_changes&&t.no_changes===!0?!0:t.docs_read===t.docs_written&&0===t.doc_write_failures)},e.prototype.last_send_time=function(){var t;return t=this.get("last_send_time"),t?moment(this.get("last_send_time")).fromNow():"never"},e.prototype.was_last_get_successful=function(){return this.get("last_get_success")},e.prototype.last_get_time=function(){var t;return t=this.get("last_get_time"),t?moment(this.get("last_get_time")).fromNow():"never"},e.prototype.sendToCloud=function(t){return this.fetch({error:function(t){return function(e){return t.log("Unable to fetch Sync doc: "+JSON.stringify(e))}}(this),success:function(e){return function(){return e.log("Checking for internet. (Is "+Coconut.config.cloud_url()+" is reachable?) Please wait."),$.ajax({dataType:"jsonp",url:Coconut.config.cloud_url(),error:function(n){return e.log("ERROR! "+Coconut.config.cloud_url()+" is not reachable. Do you have enough airtime? Are you on WIFI?  Either the internet is not working or the site is down: "+JSON.stringify(n)),t.error(),e.save({last_send_error:!0})},success:function(){return e.log(Coconut.config.cloud_url()+" is reachable, so internet is available."),e.log("Creating list of all results on the tablet. Please wait."),$.couch.db(Coconut.config.database_name()).view(Coconut.config.design_doc_name()+"/results",{include_docs:!1,error:function(){return e.log("Could not retrieve list of results: "+JSON.stringify(error)),t.error(),e.save({last_send_error:!0})},success:function(n){var o;return e.log("Synchronizing "+n.rows.length+" results. Please wait."),o=_.pluck(n.rows,"id"),$.couch.db(Coconut.config.database_name()).saveDoc({collection:"log",action:"sendToCloud",user:User.currentUser.id,time:moment().format(Coconut.config.get("date_format"))},{error:function(t){return e.log("Could not create log file: "+JSON.stringify(t))},success:function(){return $.couch.replicate(Coconut.config.database_name(),Coconut.config.cloud_url_with_credentials(),{success:function(n){return e.log("Send data finished: created, updated or deleted "+n.docs_written+" results on the server."),e.save({last_send_result:n,last_send_error:!1,last_send_time:(new Date).getTime()}),e.sendLogMessagesToCloud({success:function(){return t.success()},error:function(e){return this.save({last_send_error:!0}),t.error(e)}})}},{doc_ids:o}),Coconut.menuView.checkReplicationStatus()}})}})}})}}(this)})},e.prototype.log=function(t){return Coconut.debug(t)},e.prototype.sendLogMessagesToCloud=function(t){return this.fetch({error:function(t){return function(e){return t.log("Unable to fetch Sync doc: "+JSON.stringify(e))}}(this),success:function(e){return function(){return $.couch.db(Coconut.config.database_name()).view(Coconut.config.design_doc_name()+"/byCollection",{key:"log",include_docs:!1,error:function(n){return e.log("Could not retrieve list of log entries: "+JSON.stringify(n)),t.error(n),e.save({last_send_error:!0})},success:function(n){var o;return e.log("Sending "+n.rows.length+" log entries. Please wait."),o=_.pluck(n.rows,"id"),$.couch.replicate(Coconut.config.database_name(),Coconut.config.cloud_url_with_credentials(),{success:function(n){return e.save({last_send_result:n,last_send_error:!1,last_send_time:(new Date).getTime()}),e.log("Successfully sent "+n.docs_written+" log messages to the server."),t.success()},error:function(n){return e.log("Could not send log messages to the server: "+JSON.stringify(n)),e.save({last_send_error:!0}),"function"==typeof t.error?t.error(n):void 0}},{doc_ids:o}),Coconut.menuView.checkReplicationStatus()}})}}(this)})},e.prototype.getFromCloud=function(t){return this.fetch({error:function(t){return function(e){return t.log("Unable to fetch Sync doc: "+JSON.stringify(e))}}(this),success:function(e){return function(){return e.log("Checking that "+Coconut.config.cloud_url()+" is reachable. Please wait."),$.ajax({dataType:"jsonp",url:Coconut.config.cloud_url(),error:function(n){return e.log("ERROR! "+Coconut.config.cloud_url()+" is not reachable. Do you have enough airtime? Are you on WIFI?  Either the internet is not working or the site is down: "+JSON.stringify(n)),"function"==typeof t.error?t.error(n):void 0},success:function(){return e.log(Coconut.config.cloud_url()+" is reachable, so internet is available."),e.fetch({success:function(){return e.log("Updating users, forms and the design document. Please wait."),e.replicateApplicationDocs({error:function(n){return $.couch.logout(),e.log("ERROR updating application: "+JSON.stringify(n)),e.save({last_get_success:!1}),null!=t&&"function"==typeof t.error?t.error(n):void 0},success:function(){return $.couch.logout(),$.couch.db(Coconut.config.database_name()).saveDoc({collection:"log",action:"getFromCloud",user:User.currentUser.id,time:moment().format(Coconut.config.get("date_format"))},{error:function(t){return e.log("Could not create log file "+JSON.stringify(t))},success:function(){return e.log("Sending log messages to cloud."),e.sendLogMessagesToCloud({success:function(){return e.log("Finished, refreshing app in 5 seconds..."),e.fetch({error:function(t){return e.log("Unable to fetch Sync doc: "+JSON.stringify(t))},success:function(){return e.save({last_get_success:!0,last_get_time:(new Date).getTime()}),null!=t&&"function"==typeof t.success&&t.success(),_.delay(function(){return document.location.reload()},5e3)}})}})}})}})}})}})}}(this)})},e.prototype.replicate=function(t){return $.couch.login({name:Coconut.config.get("local_couchdb_admin_username"),password:Coconut.config.get("local_couchdb_admin_password"),success:function(){return $.couch.replicate(Coconut.config.cloud_url_with_credentials(),Coconut.config.database_name(),{success:function(){return t.success()},error:function(){return t.error()}},t.replicationArguments),Coconut.menuView.checkReplicationStatus()},error:function(){return console.log("Unable to login as local admin for replicating the design document (main application)")}})},e.prototype.replicateApplicationDocs=function(t){return $.ajax({dataType:"jsonp",url:Coconut.config.cloud_url_with_credentials()+"/_design/"+Coconut.config.design_doc_name()+"/_view/docIDsForUpdating",include_docs:!1,error:function(){return function(e,n,o){return"function"==typeof t.error?t.error(o):void 0}}(this),success:function(e){return function(n){var o;return o=_.pluck(n.rows,"id"),o.push("_design/"+Coconut.config.design_doc_name()),e.log("Updating "+o.length+" docs (users, forms and the design document). Please wait."),e.replicate(_.extend(t,{replicationArguments:{doc_ids:o}}))}}(this)})},e}(Backbone.Model);var LocalConfig,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;LocalConfig=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.set({_id:"coconut.config.local"})},e.prototype.url="/local_configuration",e}(Backbone.Model);var Message,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;Message=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.url="/message",e.prototype.sendSMS=function(t){var e;return e=this.get("to").replace(/^07/,"2557"),$.ajax({url:"https://CHANGEME/bulksms/dispatch.php",dataType:"jsonp",data:{user:"user",password:"pass",msisdn:e,message:this.get("text")},success:function(){return t.success()},error:function(e){return console.log(e),"success"===e.statusText?t.success():t.error(e)}})},e}(Backbone.Model);var MessageCollection,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;MessageCollection=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.model=Message,e.prototype.url="/message",e}(Backbone.Collection);var Help,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;Help=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){},e.prototype.url="/help",e}(Backbone.Model);var LoginView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;LoginView=function(t){function e(){return this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.el="#content",e.prototype.render=function(){return this.$el.html("<style> #login_wrapper{ font-size: 200%; width:50%; margin: 0px auto; } #login_message{ margin-top: 20px; margin-bottom: 20px; } #login_form input{ font-size: 100%; display: block; } #login_form input[type=submit]{ height: 2em; } </style> <div id='login_wrapper'> <div id='login_message'>Please login to continue:</div> <form id='login_form'> <label for='username'>Username</label> <input type='text' id='username' name='username'> <label for='password'>Password</label> <input id='password' name='password' type='password'> <input type='submit' value='Login'> </form> </div>"),$("input[type=text],input[type=password]").textinput(),$("input[type=submit]").button()},e.prototype.events={"submit form#login_form":"login"},e.prototype.updateNavBar=function(){},e.prototype.login=function(){var t,e;return t=$("#login_form").toObject(),e=new User({_id:"user."+t.username}),e.fetch({success:function(n){return function(){return e.passwordIsValid(t.password)?(e.login(),n.callback.success()):$("#login_message").html("Wrong password")}}(this),error:function(){return function(){return $("#login_message").html("Wrong username")}}(this)}),!1},e}(Backbone.View);var DesignView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;DesignView=function(t){function e(){return this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.question=new Question},e.prototype.el="#content",e.prototype.render=function(){var t;return t={},t.types=this.questionTypes,$("#content").html(this.template(t)),this.basicMode()},e.prototype.template=Handlebars.compile("<div id='design-view'> <h3> Design </h3> <small> <b>Instructions</b>: <p>Use the drop down below to select the type of questions that you will be asking. Click <button>Preview</button> to see what the questions will look like.</p> <div class='advanced'><b>Advanced: </b><p>Use <img title='repeat' src='images/repeat.png' style='background-color:#DDD'/> to make the question repeatable. If you want to group questions together to form a repeatable block then click <img title='group' src='images/group.png' style='background-color:#DDD'/> between the questions and use the <img title='repeat' src='images/repeat.png' style='background-color:#DDD'/> as before. Ungroup by using <img title='ungroup' src='images/ungroup.png' style='background-color:#DDD'/>.</p> </div> </small> <hr/> <div id='questions'> <label for='rootQuestionName'>Name</label> <input id='rootQuestionName' name='rootQuestionName' type='text'/> </div> <label for='element_selector'>Add questions</label> <select id='element_selector'> {{#each types}} <option>{{this}}</option> {{/each}} </select> <button>Add</button><br/> <button type='button'>Save</button> <button>Preview</button> <button>Advanced Mode</button> <hr/> <form id='render'></form> <div id='form_output'></form> </div>"),e.prototype.questionTypes=["text","number","date","datetime","textarea","select","hidden","radio","checkbox","autocomplete from list","autocomplete from previous entries","location","image"],e.prototype.events={"click #design-view button:contains(Add)":"add","click #design-view button[title=group]":"groupClick","click #design-view button[title=ungroup]":"ungroupClick","click #design-view button[title=delete]":"deleteClick","click #design-view button[title=repeat]":"toggleRepeatable","click #design-view button:contains(Preview)":"renderForm","click #design-view button:contains(Show Form Output)":"formDump","click #design-view button:contains(Advanced Mode)":"advancedMode","click #design-view button:contains(Basic Mode)":"basicMode","click #design-view button:contains(Save)":"save"},e.prototype.save=function(){return this.question.loadFromDesigner($("#questions")),this.question.save(null,{success:function(){return Coconut.menuView.render()}})},e.prototype.add=function(t){return this.addQuestion({type:$(t.target).prev().val()})},e.prototype.loadQuestion=function(t){return this.question=new Question({id:t}),this.question.fetch({success:function(t){return function(){return $("#rootQuestionName").val(t.question.id),_.each(t.question.questions(),function(e){return t.addQuestion(e.attributes)})}}(this)})},e.prototype.addQuestion=function(t){var e,n,o,r,i,s,u,a,c;return t.questions&&alert("Support for editing grouped forms not yet implemented"),a=t.type,n=t.id||Math.ceil(1e3*Math.random()),o=t.label||"",i=t.repeatable||"",c=t.validation||"",s=t.required||"",u=t["select-options"]||"option1,option2",r=t["radio-options"]||"option1,option2",e=t["autocomplete-options"]||"option1,option2,option3",$("#questions").children().length>0&&$("#questions").append("<button class='advanced' title='group'><img src='images/group.png'/></button>"),$("#questions").append("<div data-repeat='false' class='question-definition' id='"+n+"'> <div class='question-definition-controls'> <button class='advanced' title='repeat'><img src='images/repeat.png'></button> <input type='hidden' id=repeatable-"+n+" value='false'></input> <button title='delete'><img src='images/delete.png'></button> </div> <div>Type: "+a+"</div> <label for='label-"+n+"'>Label</label> <input type='text' name='label-"+n+"' id='label-"+n+"' value='"+o+"'></input> <label class='advanced' for='required-"+n+"'>Required</label> <input type='checkbox' class='advanced' name='required-"+n+"' id='required-"+n+"' "+("false"===s?"":"checked='true'")+"></textarea> <label class='advanced' for='validation-"+n+"'>Validation</label> <textarea class='advanced' name='validation-"+n+"' id='validation-"+n+"'>"+c+"</textarea> "+function(){switch(a){case"select":return"<label for='select-options-"+n+"'>Select Options</label> <textarea name='select-options-"+n+"' id='select-options-"+n+"'>"+u+"</textarea>";case"radio":return"<label for='radio-options-"+n+"'>Radio Options</label> <textarea name='radio-options-"+n+"' id='radio-options-"+n+"'>"+r+"</textarea>";case"autocomplete from list":return"<label for='autocomplete-options-"+n+"'>Autocomplete Options</label> <textarea name='autocomplete-options-"+n+"' id='autocomplete-options-"+n+"'>"+e+"</textarea>";case"autocomplete from previous entries":return"<input type='hidden' name='autocomplete-from-previous-entries-"+n+"' id='autocomplete-from-previous-entries-"+n+"' value='true'></input>";default:return""}}()+" <input type='hidden' name='type-"+n+"' id='type-"+n+"' value='"+a+"'></input> <input type='hidden' name='required-"+n+"' value='false'></input> </div>")},e.prototype.groupClick=function(t){var e;return e=$(t.target).closest("button"),this.group(e.prev(),e.next()),e.remove()},e.prototype.group=function(t,e){var n,o,r,i,s;for(s=[t,e],r=0,i=s.length;i>r;r++)n=s[r],"false"===n.attr("repeat")&&n.children(".question-definition").length()>0&&this.ungroup(n);return o=Math.ceil(1e3*Math.random()),t.add(e).wrapAll("<div data-repeat='false' class='question-definition' id='"+o+"'> <div class='question-definition-controls'> <button class='advanced' title='repeat'><img src='images/repeat.png'></button> <input type='hidden' id=repeatable-"+o+" value='false'></input> <button title='delete'><img src='images/delete.png'></button> <button class='advanced' title='ungroup'><img src='images/ungroup.png'></button> </div> </div>")},e.prototype.ungroupClick=function(t){var e;return e=$(t.target).closest("button").parent(),this.ungroup(e)},e.prototype.ungroup=function(t){var e,n;return e=t.parent().children(".question-definition-controls"),n=t.parent().children(".question-definition").first(),t.unwrap(),e.remove(),n.after("<button class='advanced' title='group'><img src='images/group.png'/></button>"),t},e.prototype.deleteClick=function(t){return this.deleteQuestion($(t.target).closest(".question-definition"))},e.prototype.deleteQuestion=function(t){var e;return e=t.parent(".question-definition"),2===e.children(".question-definition").length&&this.ungroup(t),1===t.next("button").length?t.next("button").remove():t.prev("button").remove(),t.remove()},e.prototype.toggleRepeatable=function(t){var e,n;return e=$(t.target).closest("button"),n=e.next(),"false"===n.val()?(e.attr("style","background-color:green"),n.val("true")):(e.attr("style",""),n.val("false"))},e.prototype.questions=function(){return $("#questions").children()},e.prototype.toHTMLForm=function(){var t;return this.question.loadFromDesigner($("#questions")),t=new QuestionView({model:this.question}),t.toHTMLForm()},e.prototype.dump=function(){return $("#dump").html(this.toJson())},e.prototype.renderForm=function(){return $("#render").html(this.toHTMLForm()),$("#form_output").html("<hr/> <button type='button'>Show Form Output</button><br/> <textarea id='dump' style='width:400px;height:100px'></textarea>")},e.prototype.formDump=function(){return $("#dump").html(JSON.stringify($("form").toObject()))},e.prototype.advancedMode=function(){return $("body").removeClass("all-advanced-hidden"),$("button:contains(Advanced Mode)").html("Basic Mode")},e.prototype.basicMode=function(){return $("body").addClass("all-advanced-hidden"),$("button:contains(Basic Mode)").html("Advanced Mode")},e}(Backbone.View);var QuestionView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;window.SkipTheseWhen=function(t,e){var n,o,r,i,s,u,a,c;for(r=[],t=t.split(/\s*,\s*/),i=0,u=t.length;u>i;i++)o=t[i],r.push(window.questionCache[o]);for(n="disabled_skipped",c=[],s=0,a=r.length;a>s;s++)o=r[s],c.push(e?o.addClass(n):o.removeClass(n));return c},window.ResultOfQuestion=function(t){var e;return("function"==typeof(e=window.getValueCache)[t]?e[t]():void 0)||null},QuestionView=function(_super){function QuestionView(){return this.render=__bind(this.render,this),QuestionView.__super__.constructor.apply(this,arguments)}return __extends(QuestionView,_super),QuestionView.prototype.initialize=function(){return null==Coconut.resultCollection&&(Coconut.resultCollection=new ResultCollection),this.autoscrollTimer=0},QuestionView.prototype.el="#content",QuestionView.prototype.triggerChangeIn=function(t){var e,n,o,r,i;for(i=[],o=0,r=t.length;r>o;o++)n=t[o],e=[],e.push(window.questionCache[n].find("input, select, textarea, img")),i.push($(e).each(function(t){return function(e,n){var o;return o={target:n},t.actionOnChange(o)}}(this)));return i},QuestionView.prototype.render=function(){var autocompleteElements,skipperList;return this.$el.html("<style> .message { color: grey; font-weight: bold; padding: 10px; border: 1px yellow dotted; background: yellow; display: none; } label.radio { border-radius:20px; display:block; padding:4px 11px; border: 1px solid black; cursor: pointer; text-decoration: none; } input[type='radio']:checked + label { background-color:#ddd; background: #5393c5; background-image: -webkit-gradient(linear,left top,left bottom,from(#5393c5),to(#6facd5)); background-image: -webkit-linear-gradient(#5393c5,#6facd5); background-image: -moz-linear-gradient(#5393c5,#6facd5); background-image: -ms-linear-gradient(#5393c5,#6facd5); background-image: -o-linear-gradient(#5393c5,#6facd5); background-image: linear-gradient(#5393c5,#6facd5); } input[type='radio']{ height: 0px; } div.question.radio{ padding-top: 8px; padding-bottom: 8px; } .tt-hint{ display:none } .tt-dropdown-menu{ width: 100%; background-color: lightgray; } .tt-suggestion{ background-color: white; border-radius:20px; display:block; padding:4px 11px; border: 1px solid black; cursor: pointer; text-decoration: none; } .tt-suggestion .{ } </style> <div style='position:fixed; right:5px; color:white; padding:20px; z-index:5' id='messageText'> <a href='#help/"+this.model.id+"'>Help</a> </div> <div style='position:fixed; right:5px; color:white; background-color: #333; padding:20px; display:none; z-index:10' id='messageText'> Saving... </div> <h1>"+this.model.id+"</h1> <div id='question-view'> <form> "+this.toHTMLForm(this.model)+" </form> </div>"),js2form($("form").get(0),this.result.toJSON()),this.updateCache(),this.updateSkipLogic(),skipperList=[],$(this.model.get("questions")).each(function(){return function(t,e){return e.actionOnChange().match(/skip/i)&&skipperList.push(e.safeLabel()),null!=e.get("action_on_questions_loaded")&&""!==e.get("action_on_questions_loaded")?CoffeeScript.eval(e.get("action_on_questions_loaded")):void 0
}}(this)),this.triggerChangeIn(skipperList),this.$el.find("input[type=text],input[type=number],input[type='autocomplete from previous entries'],input[type='autocomplete from list'],input[type='autocomplete from code']").textinput(),this.$el.find("input[type=checkbox]").checkboxradio(),this.$el.find("ul").listview(),this.$el.find("select").selectmenu(),this.$el.find("a").button(),this.$el.find("input[type=date]").datebox({mode:"calbox",dateFormat:"%d-%m-%Y"}),autocompleteElements=[],_.each($("input[type='autocomplete from list']"),function(t){return t=$(t),t.typeahead({local:t.attr("data-autocomplete-options").replace(/\n|\t/,"").split(/, */)}),autocompleteElements.push(t)}),_.each($("input[type='autocomplete from code']"),function(element){return element=$(element),element.typeahead({local:eval(element.attr("data-autocomplete-options"))}),autocompleteElements.push(element)}),_.each($("input[type='autocomplete from previous entries']"),function(t){return t=$(t),t.typeahead({prefetch:document.location.pathname.substring(0,document.location.pathname.indexOf("index.html"))+('_list/values/byValue?key="'+t.attr("name")+'"')}),autocompleteElements.push(t)}),_.each(autocompleteElements,function(t){return function(e){return e.blur(function(){return t.autoscroll(e)})}}(this)),this.readonly?$("input, textarea").attr("readonly","true"):void 0},QuestionView.prototype.events={"change #question-view input":"onChange","change #question-view select":"onChange","change #question-view textarea":"onChange","click #question-view button:contains(+)":"repeat","click #question-view a:contains(Get current location)":"getLocation","click .next_error":"runValidate","click .validate_one":"onValidateOne"},QuestionView.prototype.runValidate=function(){return this.validateAll()},QuestionView.prototype.onChange=function(t){var e,n,o,r;return e=$(t.target),n=e.attr("id"),n===this.oldStamp&&(new Date).getTime()<this.throttleTime+1e3?void 0:(this.throttleTime=(new Date).getTime(),this.oldStamp=n,r=e.attr("name"),"complete"===r?this.changedComplete?void(this.changedComplete=!1):(this.validateAll(),Coconut.menuView.update(),this.save(),this.updateSkipLogic(),this.actionOnChange(t)):(this.changedComplete=!1,o=window.questionCache[r].find(".message").is(":visible"),_.delay(function(e){return function(){var n;return!o&&(n=e.validateOne({key:r,autoscroll:!1,button:"<button type='button' data-name='"+r+"' class='validate_one'>Validate</button>"}),e.save(),e.updateSkipLogic(),e.actionOnChange(t),n)?e.autoscroll(t):void 0}}(this),500)))},QuestionView.prototype.onValidateOne=function(t){var e,n;return e=$(t.target),n=$(t.target).attr("data-name"),this.validateOne({key:n,autoscroll:!0,leaveMessage:!1,button:"<button type='button' data-name='"+n+"' class='validate_one'>Validate</button>"})},QuestionView.prototype.validateAll=function(){var t,e,n,o,r,i;for(t=!0,i=window.keyCache,o=0,r=i.length;r>o;o++)e=i[o],n=!this.validateOne({key:e,autoscroll:t,leaveMessage:!1}),t&&n&&(t=!1);return this.completeButton(t),t&&$("[name=complete]").parent().scrollTo(),t},QuestionView.prototype.validateOne=function(t){var e,n,o,r,i,s,u,a;s=t.key||"",o=t.autoscroll||!1,r=t.button||"<button type='button' class='next_error'>Next Error</button>",u=t.leaveMessage||!1,n=window.questionCache[s],e=n.find(".message");try{a=this.isValid(s)}catch(c){i=c,alert("isValid error in "+s+"\n"+i),a=""}return e.is(":visible")&&u?""===a?!0:!1:""===a?(e.hide(),o&&this.autoscroll(n),!0):(e.show().html(a+" "+r).find("button").button(),this.scrollToQuestion(n),!1)},QuestionView.prototype.isValid=function(t){var e,n,o,r,i,s,u,a,c,l,p;if(t){if(s=[],r=window.questionCache[t],r.hasClass("label"))return"";if(o=$("[name="+t+"]",r),u=$(r.find("input").get(0)).attr("type"),n="radio"===u?$("label[for="+o.attr("id").split("-")[0]+"]",r).text()||"":null!=(p=$("label[for="+o.attr("id")+"]",r))?p.text():void 0,i="true"===r.attr("data-required"),a=unescape(r.attr("data-validation")),"undefined"===a&&(a=null),l=window.getValueCache[t](),!r.is(":visible"))return"";if(0!==o.find("input").length&&("checkbox"===u||"radio"===u))return"";if("Location"!==t&&(!i||""!==l&&null!==l||s.push("'"+n+"' is required.")),null!=a&&""!==a)try{c=CoffeeScript.eval("(value) -> "+a,{bare:!0})(l),null!=c&&s.push(c)}catch(d){if(e=d,"invisible reference"===e)return"";alert("Validation error for "+t+" with value "+l+": "+e)}return 0!==s.length?s.join("<br>")+"<br>":""}},QuestionView.prototype.scrollToQuestion=function(t){return this.autoscroll($(t).prev())},QuestionView.prototype.autoscroll=function(t){var e,n,o;if(clearTimeout(this.autoscrollTimer),t.jquery?(e=t,window.scrollTargetName=e.attr("data-question-name")||e.attr("name")):(n=$(t.target),window.scrollTargetName=n.attr("name"),e=window.questionCache[window.scrollTargetName]),this.$next=e.next(),!this.$next.is(":visible")&&this.$next.length>0)for(o=0;!this.$next.is(":visible")&&(o+=1)<100;)this.$next=this.$next.next();if(this.$next.is(":visible")){if(window.questionCache[window.scrollTargetName].find(".message").is(":visible"))return;return $(window).on("scroll",function(t){return function(){return $(window).off("scroll"),clearTimeout(t.autoscrollTimer)}}(this)),this.autoscrollTimer=setTimeout(function(t){return function(){return $(window).off("scroll"),t.$next.scrollTo().find("input[type=text],input[type=number]").focus()}}(this),1e3)}},QuestionView.prototype.actionOnChange=function(t){var e,n,o,r,i,s,u,a,c;if(a=$(t.target).get(0).nodeName,n="INPUT"===a||"SELECT"===a||"TEXTAREA"===a?$(t.target):$(t.target).parent().parent().parent().find("input,textarea,select"),n.is(":visible")){s=n.attr("name"),e=$(".question [data-question-name="+s+"]"),o=e.attr("data-action_on_change");try{c=ResultOfQuestion(s)}catch(l){if(r=l,"invisible reference"===r)return}if(""!==o&&null!=o){o="(value) -> "+o;try{return(u=CoffeeScript.eval.apply(this,[o]))(c)}catch(l){return r=l,s=/function (.{1,})\(/.exec(r.constructor.toString())[1],i=r.message,alert("Action on change error in question "+(e.attr("data-question-id")||e.attr("id"))+"\n\n"+s+"\n\n"+i)}}}},QuestionView.prototype.updateSkipLogic=function(){var $question,error,message,name,result,skipLogicCode,_ref,_results;_ref=window.questionCache,_results=[];for(name in _ref)if($question=_ref[name],skipLogicCode=window.skipLogicCache[name],""!==skipLogicCode&&null!=skipLogicCode){try{result=eval(skipLogicCode)}catch(_error){error=_error,"invisible reference"===error?result=!0:(name=/function (.{1,})\(/.exec(error.constructor.toString())[1],message=error.message,alert("Skip logic error in question "+$question.attr("data-question-id")+"\n\n"+name+"\n\n"+message))}_results.push($question[0].style.display=result?"none":"")}return _results},QuestionView.prototype.save=_.throttle(function(){var t;return t=$("form").toObject({skipEmpty:!1}),t.lastModifiedAt=moment(new Date).format(Coconut.config.get("datetime_format")),t.savedBy=$.cookie("current_user"),this.result.save(t,{success:function(){return function(t){return $("#messageText").slideDown().fadeOut(),Coconut.router.navigate("edit/result/"+t.id,!1),Coconut.menuView.update()}}(this)})},1e3),QuestionView.prototype.completeButton=function(t){return this.changedComplete=!0,$("[name=complete]").prop("checked")!==t?$("[name=complete]").click():void 0},QuestionView.prototype.toHTMLForm=function(t,e){return null==t&&(t=this.model),window.skipLogicCache={},null==t.length&&(t=[t]),_.map(t,function(t){return function(n){var o,r,i,s,u,a,c,l;return l="true"===n.repeatable()?"<button>+</button>":"",null!=n.type()&&null!=n.label()&&""!==n.label()?(i=n.safeLabel(),window.skipLogicCache[i]=""!==n.skipLogic()?CoffeeScript.compile(n.skipLogic(),{bare:!0}):"",c=n.get("id"),"true"===n.repeatable()&&(i+="[0]",c=n.get("id")+"-0"),null!=e&&(i="group."+e+"."+i),"<div "+(n.validation()?n.validation()?"data-validation = '"+escape(n.validation())+"'":void 0:"")+" data-required='"+n.required()+"' class='question "+(("function"==typeof n.type?n.type():void 0)||"")+"' data-question-name='"+i+"' data-question-id='"+c+"' data-action_on_change='"+_.escape(n.actionOnChange())+"' > "+(~n.type().indexOf("hidden")?void 0:"<label type='"+n.type()+"' for='"+c+"'>"+n.label()+" <span></span></label>")+" <div class='message'></div> "+function(){var t,e,s;switch(n.type()){case"textarea":return"<input name='"+i+"' type='text' id='"+c+"' value='"+_.escape(n.value())+"'></input>";case"select":if(this.readonly)return n.value();for(o="<select>",s=n.get("select-options").split(/, */),r=t=0,e=s.length;e>t;r=++t)u=s[r],o+="<option name='"+i+"' id='"+c+"-"+r+"' value='"+u+"'>"+u+"</option>";return o+="</select>";case"radio":return this.readonly?"<input class='radioradio' name='"+i+"' type='text' id='"+c+"' value='"+n.value()+"'></input>":(a=n.get("radio-options"),_.map(a.split(/, */),function(t,e){return"<input class='radio' type='radio' name='"+i+"' id='"+c+"-"+e+"' value='"+_.escape(t)+"'/> <label class='radio' for='"+c+"-"+e+"'>"+t+"</label> <!-- <div class='ui-radio'> <label for=''"+c+"-"+e+"' data-corners='true' data-shadow='false' data-iconshadow='true' data-wrapperels='span' data-icon='radio-off' data-theme='c' class='ui-btn ui-btn-corner-all ui-btn-icon-left ui-radio-off ui-btn-up-c'> <span class='ui-btn-inner ui-btn-corner-all'> <span class='ui-btn-text'>"+t+"</span> <span class='ui-icon ui-icon-radio-off ui-icon-shadow'>&nbsp;</span> </span> </label> <input type='radio' name='"+i+"' id='"+c+"-"+e+"' value='"+_.escape(t)+"'/> </div> -->"}).join(""));case"checkbox":return this.readonly?"<input name='"+i+"' type='text' id='"+c+"' value='"+_.escape(n.value())+"'></input>":"<input style='display:none' name='"+i+"' id='"+c+"' type='checkbox' value='true'></input>";case"autocomplete from list":case"autocomplete from previous entries":case"autocomplete from code":return"<!-- autocomplete='off' disables browser completion --> <input autocomplete='off' name='"+i+"' id='"+c+"' type='"+n.type()+"' value='"+n.value()+"' data-autocomplete-options='"+n.get("autocomplete-options")+"'></input> <ul id='"+c+"-suggestions' data-role='listview' data-inset='true'/>";case"location":return this.watchID=navigator.geolocation.getAccurateCurrentPosition(function(){},function(){},function(){},{desiredAccuracy:50,maxWait:3e5}),"<a data-question-id='"+c+"'>Get current location</a> <label for='"+c+"-description'>Location Description</label> <input type='text' name='"+i+"-description' id='"+c+"-description'></input> "+_.map(["latitude","longitude","accuracy"],function(t){return"<label for='"+c+"-"+t+"'>"+t+"</label><input readonly='readonly' type='number' name='"+i+"-"+t+"' id='"+c+"-"+t+"'></input>"}).join("")+" "+_.map(["altitude","altitudeAccuracy","heading","timestamp"],function(t){return"<input type='hidden' name='"+i+"-"+t+"' id='"+c+"-"+t+"'></input>"}).join("");case"image":return"<img style='"+n.get("image-style")+"' src='"+n.get("image-path")+"'/>";case"label":return"";default:return"<input name='"+i+"' id='"+c+"' type='"+n.type()+"' value='"+n.value()+"'></input>"}}.call(t)+" </div> "+l):(s=c,n.repeatable()&&(s+="[0]"),"<div data-group-id='"+c+"' class='question group'>"+t.toHTMLForm(n.questions(),s)+"</div>"+l)}}(this)).join("")},QuestionView.prototype.updateCache=function(){var t,e,n,o,r,i,s,u,a,c;for(window.questionCache={},window.getValueCache={},window.$questions=$(".question"),c=window.$questions,u=0,a=c.length;a>u;u++)r=c[u],o=r.getAttribute("data-question-name"),null!=o&&""!==o&&(e={},window.questionCache[o]=$(r),t=window.questionCache[o],i=$("select[name="+o+"]",t),0===i.length?(n=$("input[name="+o+"]",t),0!==n.length?(s=n[0].getAttribute("type"),"radio"===s?!function(t,n){return e=function(){return $("input:checked",n).safeVal()}}(o,t):"checkbox"===s?!function(t,n){return e=function(){return $("input",n).map(function(){return $(this).safeVal()})}}(o,t):!function(t){return e=function(){return t.safeVal()}}(n)):!function(t,n){return e=function(){return $(".textarea[name="+t+"]",n).safeVal()}}(o,t)):!function(t){return e=function(){return t.safeVal()}}(i),window.getValueCache[o]=e);return window.keyCache=_.keys(questionCache)},QuestionView.prototype.repeat=function(t){var e,n,o,r,i,s,u,a,c,l;for(e=$(t.target),i=e.prev(".question").clone(),s=i.attr("data-group-id"),null==s&&(s=""),l=i.find("input"),a=0,c=l.length;c>a;a++)n=l[a],n=$(n),o=n.attr("name"),u=new RegExp(s+"\\[(\\d)\\]"),r=parseInt(_.last(o.match(u)))+1,n.attr("name",o.replace(u,s+"["+r+"]"));return e.after(i.add(e.clone())),e.remove()},QuestionView.prototype.getLocation=function(t){var e,n,o,r,i,s,u;return s=200,e=18e4,i=$(t.target).closest("[data-question-id]").attr("data-question-id"),$("#"+i+"-description").val("Retrieving position, please wait."),u=function(t){return _.each(t.coords,function(t,e){return $("#"+i+"-"+e).val(t)}),$("#"+i+"-timestamp").val(moment(t.timestamp).format(Coconut.config.get("datetime_format"))),$.getJSON("http://api.geonames.org/findNearbyPlaceNameJSON?lat="+t.coords.latitude+"&lng="+t.coords.longitude+"&username=mikeymckay&callback=?",null,function(){return function(t){return $("#"+i+"-description").val(parseFloat(t.geonames[0].distance).toFixed(1)+" km from center of "+t.geonames[0].name)}}(this))},r=function(t){return function(e){return $("label[type=location]").html("Household Location"),u(e),$("#"+i+"-description").val("Success"),t.save()}}(this),n=function(t){return $("#"+i+"-description").val("Error: "+JSON.stringify(t))},o=function(){return function(t){return u(t),$("label[type=location]").html("Household Location<div style='background-color:yellow'>Current accuracy is "+t.coords.accuracy+" meters - must be less than "+s+" meters. Make sure there are no trees or buildings blocking view to the sky.</div>")}}(this),navigator.geolocation.clearWatch(this.watchID),navigator.geolocation.getAccurateCurrentPosition(r,n,o,{desiredAccuracy:s,maxWait:e})},QuestionView}(Backbone.View),function(t){return t.fn.scrollTo=function(e,n){var o;null==e&&(e=500);try{t("html, body").animate({scrollTop:t(this).offset().top+"px"},e,null,n)}catch(r){o=r,console.log("error",o),console.log("Scroll error with 'this'",this)}return this},t.fn.safeVal=function(){return this.is(":visible")||this.parents(".question").filter(function(){return!t(this).hasClass("group")}).is(":visible")?t.trim(this.val()||""):null}}($);var MenuView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;MenuView=function(t){function e(){return this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.el=".question-buttons",e.prototype.events={change:"render"},e.prototype.render=function(){return this.$el.html("<div id='navbar' data-role='navbar'> <ul></ul> </div>"),Coconut.questions.fetch({success:function(t){return function(){return t.$el.find("ul").html(Coconut.questions.map(function(t,e){return"<li><a id='menu-"+e+"' href='#show/results/"+escape(t.id)+"'><h2>"+t.id+"<div id='menu-partial-amount'></div></h2></a></li>"}).join(" ")),$(".question-buttons").navbar(),t.update()}}(this)})},e.prototype.update=function(){return Coconut.questions.each(function(){return function(t,e){var n;return n=new ResultCollection,n.fetch({include_docs:!1,question:t.id,isComplete:!1,success:function(){return $("#menu-"+e+" #menu-partial-amount").html(n.length)}})}}(this)),$.ajax("app/version",{success:function(t){return $("#version").html(t)},error:$("#version").html("-")})},e}(Backbone.View);var ResultsView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;ResultsView=function(t){function e(){return this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.question=new Question},e.prototype.el="#content",e.prototype.render=function(){return this.$el.html("<style> table.results th.header, table.results td{ font-size:150%; } </style> <div class='not-complete' data-collapsed='false' data-role='collapsible'> <h2>'"+this.question.id+"' Items Not Completed (<span class='count-complete-false'></span>)</h2> <table class='results complete-false tablesorter'> <thead><tr>"+_.map(this.question.summaryFieldNames(),function(t){return"<th class='header'>"+t+"</th>"}).join("")+("<th></th> </tr></thead> <tbody> </tbody> </table> <a href='#new/result/"+escape(this.question.id)+"'>Add new '"+this.question.id+"'</a> </div> <div class='complete' data-role='collapsible'> <h2>'"+this.question.id+"' Items Completed (<span class='count-complete-true'></span>)</h2> <table class='results complete-true tablesorter'> <thead><tr>")+_.map(this.question.summaryFieldNames(),function(t){return"<th class='header'>"+t+"</th>"}).join("")+"<th></th> </tr></thead> <tbody> </tbody> </table> </div>"),$("a").button(),$("table").tablesorter(),$("table").addTableFilter({labelText:null}),$("input[type=search]").textinput(),$("[data-role=collapsible]").collapsible(),this.loadIncompleteResults(),$(".complete").bind("expand",function(t){return function(){return $(".complete tr td").length>0?void 0:t.loadCompleteResults()}}(this)),this.updateCountComplete()},e.prototype.updateCountComplete=function(){var t;return t=new ResultCollection,t.fetch({include_docs:!1,question:this.question.id,isComplete:!0,success:function(){return function(){return $(".count-complete-true").html(t.length)}}(this)})},e.prototype.loadIncompleteResults=function(){return this.loadResults(!1)},e.prototype.loadCompleteResults=function(){return this.loadResults(!0)},e.prototype.loadResults=function(t){var e;return e=new ResultCollection,e.fetch({include_docs:!0,question:this.question.id,isComplete:t,success:function(n){return function(){return $(".count-complete-"+t).html(e.length),e.each(function(o,r){return $("table.complete-"+t+" tbody").append("<tr> "+_.map(o.summaryValues(n.question),function(t){return"<td><a href='#edit/result/"+o.id+"'>"+t+"</a></td>"}).join("")+" <td><a href='#delete/result/"+o.id+"' data-icon='delete' data-iconpos='notext'>Delete</a></td> </tr>"),r+1===e.length&&($("table a").button(),$("table").trigger("update")),_.each($("table tr"),function(t,e){return e%2===1?$(t).addClass("odd"):void 0})})}}(this)})},e}(Backbone.View);var ResultSummaryEditorView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;ResultSummaryEditorView=function(t){function e(){return this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){},e.prototype.el=$("#content"),e.prototype.events={"submit #resultSummaryEditor form":"save"},e.prototype.save=function(){return this.question.set({resultSummaryFields:$("form").toObject()}),this.question.save(),!1},e.prototype.render=function(){var t;return t="<div id='resultSummaryEditor'> Check the boxes to use for summarizing results for <b>"+this.question.id+"</b>:<br/> <form> <ul>",_.each(this.question.questions(),function(e,n){return t+="<li> <input id='result-summary-option-"+n+"' name='"+e.label()+"' type='checkbox'></input> <label for='result-summary-option-"+n+"'>"+e.label()+"</label> </li>"}),t+="</ul> <input type='submit' value='Save'></input> </form> </div>",this.$el.html(t),console.log(this.question),js2form($("form").get(0),this.question.resultSummaryFields())},e}(Backbone.View);var SyncView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;SyncView=function(t){function e(){return this.update=__bind(this.update,this),this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.sync=new Sync},e.prototype.el="#content",e.prototype.render=function(){return this.$el.html("<h2>Cloud Server: <span class='sync-target'>"+this.sync.target()+"</span></h2> <a href='#sync/send'>Send data (last done: <span class='sync-sent-status'></span>)</a> <a href='#sync/get'>Get data (last done: <span class='sync-get-status'></span>)</a>"),$("a").button(),this.update()},e.prototype.update=function(){return this.sync.fetch({success:function(t){return function(){return $(".sync-sent-status").html(t.sync.was_last_send_successful()?t.sync.last_send_time():t.sync.last_send_time()+" - last attempt FAILED"),$(".sync-get-status").html(t.sync.was_last_get_successful()?t.sync.last_get_time():t.sync.last_get_time()+" - last attempt FAILED")}}(this),error:function(t){return function(){return console.log("synclog doesn't exist yet, create it and re-render"),t.sync.save(),_.delay(t.update,1e3)}}(this)})},e}(Backbone.View);var ManageView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;ManageView=function(t){function e(){return this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.el="#content",e.prototype.render=function(){return this.$el.html("<a href='#sync'>Sync</a> <a href='#configure'>Set cloud vs mobile</a> <a href='#users'>Manage users</a> <a href='#messaging'>Send message to users</a> <h2>Question Sets</h2> <a href='#design'>New</a> <table> <thead> <th></th> <th></th> <th></th> <th></th> </thead> <tbody> </tbody> </table>"),$("a").button(),Coconut.questions.fetch({success:function(){return Coconut.questions.each(function(t){var e,n;return n=t.id,e=escape(t.id),$("tbody").append("<tr> <td>"+n+"</td> <td><a href='#edit/"+e+"'>edit</a></td> <td><a href='#delete/"+e+"'>delete</a></td> <td><a href='#edit/resultSummary/"+e+"'>summary</a></td> </tr>")}),$("table a").button()}})},e}(Backbone.View);var LocalConfigView,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;LocalConfigView=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.el="#content",e.prototype.render=function(){var t;return this.$el.html("<form id='local-config'> <h1>Configure your Coconut system</h1> <label>Coconut Cloud URL</label> <input type='text' name='coconut-cloud' value='http://'></input> <fieldset id='mode-fieldset'> <legend>Mode</legend> <label for='cloud'>Cloud (reporting system)</label> <input id='cloud' name='mode' type='radio' value='cloud'></input> <label for='mobile'>Mobile (data collection, probably on a tablet)</label> <input id='mobile' name='mode' type='radio' value='mobile'></input> </fieldset> <button>Save</button> <div id='message'></div> </form>"),null==Coconut.config.get("mode")&&($("#mode-fieldset").hide(),$("#mobile").prop("checked",!0)),this.$el.find("input[type=radio],input[type=checkbox]").checkboxradio(),this.$el.find("button").button(),this.$el.find("input[type=text]").textinput(),null!=(t=Coconut.config.local)?t.fetch({success:function(){return js2form($("#local-config").get(0),Coconut.config.local.toJSON())},error:function(){return $("#message").html("Complete the fields before continuing")}}):void 0},e.prototype.events={"click #local-config button":"save"},e.prototype.save=function(){var t,e,n;return n=$("#local-config").toObject(),t=$("input[name=coconut-cloud]").val(),e=t+"/coconut.config",n.mode&&null!=t?($("#message").html("Downloading configuration file from "+e+"<br/>"),$.ajax({url:e,dataType:"jsonp",success:function(t){return $("#message").append("Saving configuration file<br/>"),delete t._rev,Coconut.config.save(t,{success:function(){return $("#message").append("Creating local configuration file<br/>"),n=new LocalConfig,n.fetch({complete:function(){return n.save(n,{success:function(){var t;return $("#message").append("Local configuration file saved<br/>"),t=new Sync,t.save(null,{success:function(){return $("#message").append("Updating application<br/>"),t.getFromCloud({success:function(){return Coconut.router.navigate("",!1),location.reload()}})}})}})}})}})},error:function(){return console.log("Couldn't find config file at "+e)}}),!1):($("#message").html("Fields incomplete"),!1)},e}(Backbone.View);var ReportView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;ReportView=function(t){function e(){return this.spreadsheet=__bind(this.spreadsheet,this),this.render=__bind(this.render,this),this.update=__bind(this.update,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.el="#content",e.prototype.events={"change #reportOptions":"update","change #summaryField":"summarize","change #aggregateBy":"update","click #toggleDisaggregation":"toggleDisaggregation"},e.prototype.update=function(){var t,e;return t={startDate:$("#start").val(),endDate:$("#end").val(),reportType:$("#report-type :selected").text(),question:$("#selected-question :selected").text(),aggregateBy:$("#aggregateBy :selected").text()},_.each(this.locationTypes,function(e){return t[e]=$("#"+e+" :selected").text()}),e="reports/"+_.map(t,function(t,e){return e+"/"+escape(t)}).join("/"),Coconut.router.navigate(e,!0)},e.prototype.render=function(t){return this.reportType=t.reportType||"results",this.startDate=t.startDate||moment(new Date).subtract("days",14).format("YYYY-MM-DD"),this.endDate=t.endDate||moment(new Date).format("YYYY-MM-DD"),this.question=unescape(t.question),this.aggregateBy=t.aggregateBy||"District",this.$el.html("<style> table.results th.header, table.results td{ font-size:150%; } </style> <table id='reportOptions'></table> <div id='report'></div>"),Coconut.questions.fetch({success:function(t){return function(){return $("#reportOptions").append(t.formFilterTemplate({id:"question",label:"Question",form:"<select id='selected-question'> "+Coconut.questions.map(function(e){return"<option "+(e.label()===t.question?"selected='true'":"")+">"+e.label()+"</option>"}).join("")+" </select>"})),$("#reportOptions").append(t.formFilterTemplate({id:"start",label:"Start Date",form:"<input id='start' type='date' value='"+t.startDate+"'/>"})),$("#reportOptions").append(t.formFilterTemplate({id:"end",label:"End Date",form:"<input id='end' type='date' value='"+t.endDate+"'/>"})),$("#reportOptions").append(t.formFilterTemplate({id:"report-type",label:"Report Type",form:"<select id='report-type'> "+_.map(["results","spreadsheet","pivotTable","summarytables"],function(e){return"<option "+(e===t.reportType?"selected='true'":void 0)+">"+e+"</option>"}).join("")+" </select>"})),t[t.reportType](),$("div[data-role=fieldcontain]").fieldcontain(),$("select").selectmenu(),$("input[type=date]").datebox({mode:"calbox"})}}(this)})},e.prototype.hierarchyOptions=function(t,e){return"region"===t?_.keys(WardHierarchy.hierarchy):_.chain(WardHierarchy.hierarchy).map(function(n,o){return"district"===t&&e===o?_.keys(n):_.map(n,function(n,o){return"constituan"===t&&e===o?_.keys(n):_.map(n,function(n,o){return"shehia"===t&&e===o?n:void 0})})}).flatten().compact().value()},e.prototype.mostSpecificLocationSelected=function(){var t,e;return t="region",e="ALL",_.each(this.locationTypes,function(n){return"ALL"!==this[n]?(t=n,e=this[n]):void 0}),{type:t,name:e}},e.prototype.formFilterTemplate=function(t){return"<tr> <td> <label style='display:inline' for='"+t.id+"'>"+t.label+"</label> </td> <td style='width:150%'> "+t.form+" </select> </td> </tr>"},e.prototype.viewQuery=function(t){var e;return e=new ResultCollection,e.fetch({question:$("#selected-question").val(),isComplete:!0,include_docs:!0,success:function(){return e.fields={},e.each(function(t){return _.each(_.keys(t.attributes),function(t){return _.contains(["_id","_rev","question"],t)?void 0:e.fields[t]=!0})}),e.fields=_.keys(e.fields),t.success(e)}})},e.prototype.spreadsheet=function(){var t;return $("#report").html("<table id='reportTable'> <thead> <tr/> </thead> <tbody> </tbody> </table>"),this.endDate&&(t=moment(this.endDate).endOf("day").format("YYYY-MM-DD HH:mm:ss")),$.couch.db(Coconut.config.database_name()).view(Coconut.config.design_doc_name()+"/results",{startkey:[this.question,this.startDate||null],endkey:[this.question,t||{}],include_docs:!0,error:function(){return function(t){return console.log(JSON.stringify(t))}}(this),success:function(){return function(t){var e;return t=t.rows,e={},_(t).each(function(t){return _(_(t.doc).keys()).each(function(t){return e[t]=!0})}),e=_(e).keys(),$("#reportTable thead tr").html(_(e).map(function(t){return"<th>"+t+"</th>"}).join("")),$("#reportTable tbody").html(_(t).map(function(t){return"<tr> "+_(e).map(function(e){return"<td>"+(t.doc[e]||"-")+"</td>"}).join("")+" </tr>"}).join("")),$("#report").css("overflow","scroll"),$("#reportTable").dataTable({aaSorting:[[0,"desc"]],iDisplayLength:25,dom:'T<"clear">lfrtip',tableTools:{sSwfPath:"js-libraries/copy_csv_xls_pdf.swf"}})}}(this)})},e.prototype.pivotTable=function(){var t;return this.endDate&&(t=moment(this.endDate).endOf("day").format("YYYY-MM-DD HH:mm:ss")),$.couch.db(Coconut.config.database_name()).view(Coconut.config.design_doc_name()+"/results",{startkey:[this.question,this.startDate||null],endkey:[this.question,t||{}],include_docs:!0,error:function(){return function(t){return console.log(JSON.stringify(t))}}(this),success:function(){return function(t){return console.log(_(t.rows).pluck("doc",$("#report").pivotUI(_(t.rows).pluck("doc"),{renderers:$.extend($.pivotUtilities.renderers,$.pivotUtilities.gchart_renderers,$.pivotUtilities.d3_renderers)})))}}(this)})},e.prototype.results=function(){var t;return this.endDate&&(t=moment(this.endDate).endOf("day").format("YYYY-MM-DD HH:mm:ss")),$.couch.db(Coconut.config.database_name()).view(Coconut.config.design_doc_name()+"/results",{startkey:[this.question,this.startDate||null],endkey:[this.question,t||{}],include_docs:!0,error:function(){return function(t){return console.log(JSON.stringify(t))}}(this),success:function(t){return function(e){return t.$el.append("<h2>"+t.question+": "+e.rows.length+" results for "+t.startDate+" - "+t.endDate+"</h2> Select another report type above for further analysis")}}(this)})},e.prototype.summarytables=function(){return Coconut.resultCollection.fetch({includeData:!0,success:function(t){return function(){var e;return e=_.chain(Coconut.resultCollection.toJSON()).map(function(t){return _.keys(t)}).flatten().uniq().sort().value(),e=_.without(e,"_id","_rev"),t.$el.append("<br/> Choose a field to summarize:<br/> <select id='summaryField'> "+_.map(e,function(t){return"<option id='"+t+"'>"+t+"</option>"}).join("")+" </select>"),$("select").selectmenu()}}(this)})},e.prototype.summarize=function(){var t;return t=$("#summaryField option:selected").text(),this.viewQuery({success:function(e){return function(n){var o;return o={},n.each(function(e){return _.each(e.toJSON(),function(n,r){return r===t?null!=o[n]?(o[n].sums+=1,o[n].resultIDs.push(e.get("_id"))):(o[n]={},o[n].sums=1,o[n].resultIDs=[],o[n].resultIDs.push(e.get("_id"))):void 0})}),e.$el.append("<h2>"+t+"</h2> <table id='summaryTable' class='tablesorter'> <thead> <tr> <th>Value</th> <th>Total</th> </tr> </thead> <tbody> "+_.map(o,function(t,e){return"<tr> <td>"+e+"</td> <td> <button id='toggleDisaggregation'>"+t.sums+"</button> </td> <td class='dissaggregatedResults'> "+_.map(t.resultIDs,function(t){return t
}).join(", ")+" </td> </tr>"}).join("")+" </tbody> </table>"),$("button").button(),$("a").button(),_.each($("table tr"),function(t,e){return e%2===1?$(t).addClass("odd"):void 0})}}(this)})},e.prototype.toggleDisaggregation=function(){return $(".dissaggregatedResults").toggle()},e}(Backbone.View);var CaseView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;CaseView=function(t){function e(){return this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.el="#content",e.prototype.render=function(){return this.$el.html("<h1>Case ID: "+this["case"].MalariaCaseID()+"</h1> <h2>Last Modified: "+this["case"].LastModifiedAt()+"</h2> <h2>Questions: "+this["case"].Questions()+"</h2> "+_.map("region,district,constituan,ward".split(","),function(t){return function(e){return"<h2>"+e.humanize()+": "+t["case"].location(e)+"</h2>"}}(this)).join("")+" <pre> "+JSON.stringify(this["case"].toJSON(),null,4)+" </pre>")},e}(Backbone.View);var UsersView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;UsersView=function(t){function e(){return this.render=__bind(this.render,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.userCollection=new UserCollection},e.prototype.el="#content",e.prototype.events={"submit form#user":"save","click .loadUser":"load"},e.prototype.save=function(){var t,e;return e=$("#user").toObject({skipEmpty:!1}),e._id="user."+e._id,t=new User({_id:e._id}),console.log(e),t.fetch({success:function(n){return function(){return t.save(e,{success:function(){return n.render()}})}}(this),error:function(n){return function(){return t.save(e,{success:function(){return n.render()}})}}(this)}),!1},e.prototype.load=function(t){var e;return e=new User({_id:$(t.target).closest("a").attr("data-user-id")}),e.fetch({success:function(){return function(){return e.set({_id:e.get("_id").replace(/user\./,"")}),js2form($("#user").get(0),e.toJSON())}}(this)}),!1},e.prototype.render=function(){var t;return t="_id,password,district,name,comments".split(","),this.$el.html("<h2>Create/edit users</h2> <h3>Use phone number for username to enable SMS messages</h3> <form id='user'> "+_.map(t,function(t){return"<label style='display:block' for='"+t+"'>"+("_id"===t?"Username":t.humanize())+"</label> <input id='"+t+"' name='"+t+"' type='text'></input>"}).join("")+" <input type='submit'></input> </form> <h2>Click username to edit</h2> <table> <thead> "+_.map(t,function(t){return"<th>"+("_id"===t?"Username":t.humanize())+"</th>"}).join("")+" </thead> <tbody> </tbody> </table>"),this.userCollection.fetch({success:function(e){return function(){return e.userCollection.sortBy(function(t){return t.get("_id")}).forEach(function(e){return $("tbody").append("<tr> "+_.map(t,function(t){var n;return n=e.get(t),"_id"===t?"<td><a class='loadUser' data-user-id='"+e.get("_id")+"' href=''>"+n.replace(/user\./,"")+"</a></td>":"<td>"+n+"</td>"}).join("")+" </tr>")}),$("a").button()}}(this)}),$("table").addTableFilter({labelText:null}),$("input[type=search]").textinput()},e}(Backbone.View);var MessagingView,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;MessagingView=function(t){function e(){return this.render=__bind(this.render,this),this.checkAll=__bind(this.checkAll,this),e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.initialize=function(){return this.userCollection=new UserCollection,this.messageCollection=new MessageCollection,this.max=140},e.prototype.el="#content",e.prototype.events={"click #check-all":"checkAll","click .phone-number":"updateToField","click input[value=Send]":"send","keyup #message":"checkLength"},e.prototype.checkLength=function(){return $("#charCount").html("Characters used: "+$("#message").val().length+". Maximum allowed: 140"),$("#message").val().length>this.max?$("#charCount").css("color","red"):$("#charCount").css("color","")},e.prototype.send=function(){var t;return t=$("#message").val(),t.length>this.max||0===t.length?!1:(_.each(this.phoneNumbers,function(e){var n;return n=new Message({date:moment(new Date).format(Coconut.config.get("date_format")),text:t,to:e}),n.sendSMS({success:function(){return n.save(),$("#messageBox").append("Sent '"+t+"' to "+e)},error:function(n){return $("#messageBox").append("Error: ["+n+"] while sending '"+t+"' to "+e)}})}),!1)},e.prototype.checkAll=function(){return $("input[type=checkbox].phone-number").attr("checked",$("#check-all").is(":checked")),this.updateToField()},e.prototype.updateToField=function(){return this.phoneNumbers=_.map($("input[type=checkbox].phone-number:checked"),function(t){return $(t).attr("id").replace(/check-user\./,"")}),$("#to").html(this.phoneNumbers.join(", "))},e.prototype.render=function(){var t,e;return t="_id,district,name,comments".split(","),e="date,to,text".split(","),this.$el.html("<h2>Send Message</h2> <h3>Select Recipients</h2> <table class='recipients'> <thead> <th></th> "+_.map(t,function(t){return"<th>"+("_id"===t?"Phone Number":t.humanize())+"</th>"}).join("")+" </thead> <tbody> </tbody> </table> <form id='message-form'> Recipients: <div id='to'></div> <label style='display:block' for='message'>Message</label> <textarea style='width:100%' id='message' name='message'></textarea> <div id='messageBox'></div> </div> <input type='submit' value='Send'></input> <span id='charCount'></span> </form> <h3>Sent Messages</h3> <table class='sent-messages'> <thead> "+_.map(e,function(t){return"<th>"+t+"</th>"}).join("")+" </thead> <tbody> </tbody> </table>"),this.userCollection.fetch({success:function(e){return function(){return $("table.recipients").before("<input id='check-all' type='checkbox'></input>Select All"),e.userCollection.sortBy(function(t){return t.get("district")}).forEach(function(e){return e.get("_id").match(/\d\d\d/)?$(".recipients tbody").append("<tr> <td><input class='phone-number' id='check-"+e.get("_id")+"' type='checkbox'></input></td> "+_.map(t,function(t){var n;return n=e.get(t),"_id"===t&&(n=n.replace(/user\./,"")),"<td>"+n+"</td>"}).join("")+" </tr>"):void 0}),$(".recipients tbody").append("<tr> <td><input class='phone-number' id='check-user.0787263670' type='checkbox'></input></td> <td>0787263670</td> <td></td> <td>Ritha</td> <td>RTI</td> </tr> <tr> <td><input class='phone-number' id='check-user.3141' type='checkbox'></input></td> <td>31415926</td> <td></td> <td>Test</td> <td>Doesn't actually work</td> </tr>"),$("a").button()}}(this)}),this.messageCollection.fetch({success:function(t){return function(){return t.messageCollection.forEach(function(t){return $(".sent-messages tbody").append("<tr> "+_.map(e,function(e){return"<td>"+t.get(e)+"</td>"}).join("")+" </tr>")})}}(this)})},e}(Backbone.View);var HelpView,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;HelpView=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.el="#content",e.prototype.events={"click input[value=Send]":"send"},e.prototype.render=function(){return this.$el.html("<label style='display:block' for='message'>If you are having trouble please contact your supervisor as soon as possible. You can also describe the problem in the box below and it will send a message to our support team. We'll get back to you as soon as possible.</label> <textarea style='width:100%' id='message' name='message'></textarea> <div id='messageBox'></div> </div> <input type='submit' value='Send'></input>")},e.prototype.send=function(){var t,e,n;return e=$("#message").val(),0===e.length?!1:(t=new Help({date:moment(new Date).format(Coconut.config.get("date_format")),text:e,user:User.currentUser.id.replace(/user\./,"")}),t.save(),n=new Sync,$("#messageBox").append("Attempting to 'Send Data'"),n.sendToCloud({success:function(){return $("#messageBox").append("Thank you for your feedback, it has been sent")},error:function(){return $("#messageBox").append("There was a problem sending data, but your messages has been saved. If you have connectivity you can try again by pressing the 'Send data' button at the bottom of the screen.")}}),!1)},e}(Backbone.View);var Coconut,Router,__extends=function(t,e){function n(){this.constructor=t}for(var o in e)__hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},__hasProp={}.hasOwnProperty;Router=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.routes={login:"login",logout:"logout",design:"design",select:"select","show/results/:question_id":"showResults","new/result/:question_id":"newResult","edit/result/:result_id":"editResult","delete/result/:result_id":"deleteResult","delete/result/:result_id/:confirmed":"deleteResult","edit/resultSummary/:question_id":"editResultSummary","analyze/:form_id":"analyze","delete/:question_id":"deleteQuestion","edit/:question_id":"editQuestion",manage:"manage",sync:"sync","sync/send":"syncSend","sync/get":"syncGet",configure:"configure",map:"map",reports:"reports","reports/*options":"reports",alerts:"alerts","show/case/:caseID":"showCase",users:"users",messaging:"messaging",help:"help","":"default"},e.prototype.route=function(t,e,n){return Backbone.history||(Backbone.history=new Backbone.History),_.isRegExp(t)||(t=this._routeToRegExp(t)),Backbone.history.route(t,function(o){return function(r){var i;return i=o._extractParameters(t,r),n.apply(o,i),$("#loading").slideDown(),o.trigger.apply(o,["route:"+e].concat(i)),$("#loading").fadeOut()}}(this),this)},e.prototype.help=function(){return this.userLoggedIn({success:function(){return null==Coconut.helpView&&(Coconut.helpView=new HelpView),Coconut.helpView.render()}})},e.prototype.users=function(){return this.adminLoggedIn({success:function(){return null==Coconut.usersView&&(Coconut.usersView=new UsersView),Coconut.usersView.render()}})},e.prototype.messaging=function(){return this.adminLoggedIn({success:function(){return null==Coconut.messagingView&&(Coconut.messagingView=new MessagingView),Coconut.messagingView.render()}})},e.prototype.login=function(){return Coconut.loginView.callback={success:function(){return Coconut.router.navigate("",!0)}},Coconut.loginView.render()},e.prototype.userLoggedIn=function(t){return User.isAuthenticated({success:function(e){return t.success(e)},error:function(){return Coconut.loginView.callback=t,Coconut.loginView.render()}})},e.prototype.adminLoggedIn=function(t){return this.userLoggedIn({success:function(e){return e.isAdmin()?t.success(e):void 0},error:function(){return $("#content").html("<h2>Must be an admin user</h2>")}})},e.prototype.logout=function(){return User.logout(),Coconut.router.navigate("",!0)},e.prototype["default"]=function(){return this.userLoggedIn({success:function(){return $("#content").html("<!-- Reported/Facility Followup/Household Followup/#Tested/ (Show for Same period last year) For completed cases, average time between notification and household followup Last seven days Last 30 days Last 365 days Current month Current year Total --> <table class='summary tablesorter'> <thead><tr> <th>Question</th> <th>Not Completed</th> <th>Completed</th> </tr></thead> <tbody> </tbody> </table>"),Coconut.questions.each(function(){return function(t,e){return $("#content table tbody").append("<tr id='"+t.attributeSafeText()+"'><td>"+t.get("id")+"</td></tr>"),_.each(["false","true"],function(e){var n;return n=new ResultCollection,n.fetch({question:t.id,isComplete:e,success:function(){return function(){return $("tr#"+t.attributeSafeText()).append("<td>"+n.length+"</td>")}}(this)})}),e+1===Coconut.questions.length&&($("table").tablesorter(),$("table a").button(),$("table").trigger("update")),_.each($("table tr"),function(t,e){return e%2===1?$(t).addClass("odd"):void 0})}}(this))}})},e.prototype.alerts=function(){return this.userLoggedIn({success:function(){return $("#content").html("mobile"===Coconut.config.local.mode?"Alerts not available in mobile mode.":"<h1>Alerts</h1> <ul> <li> <b>Localised Epidemic</b>: More than 10 cases per square kilometer in KATI district near BAMBI shehia (map <a href='#reports/location'>Map</a>). Recommend active case detection in shehia. </li> <li> <b>Abnormal Data Detected</b>: Only 1 case reported in MAGHARIBI district for June 2012. Expected amount: 25. Recommend checking that malaria test kits are available at all health facilities in MAGHARIBI. </li> </ul>")}})},e.prototype.reports=function(t){return this.userLoggedIn({success:function(){var e;return"mobile"===Coconut.config.local.mode?$("#content").html("Reports not available in mobile mode."):(t=null!=t?t.split(/\//):void 0,e={},_.each(t,function(n,o){return o%2?void 0:e[n]=t[o+1]}),null==Coconut.reportView&&(Coconut.reportView=new ReportView),Coconut.reportView.render(e))}})},e.prototype.showCase=function(t){return this.userLoggedIn({success:function(){return null==Coconut.caseView&&(Coconut.caseView=new CaseView),Coconut.caseView["case"]=new Case({caseID:t}),Coconut.caseView["case"].fetch({success:function(){return Coconut.caseView.render()}})}})},e.prototype.configure=function(){return this.userLoggedIn({success:function(){return null==Coconut.localConfigView&&(Coconut.localConfigView=new LocalConfigView),Coconut.localConfigView.render()}})},e.prototype.editResultSummary=function(t){return this.userLoggedIn({success:function(){return null==Coconut.resultSummaryEditor&&(Coconut.resultSummaryEditor=new ResultSummaryEditorView),Coconut.resultSummaryEditor.question=new Question({id:unescape(t)}),Coconut.resultSummaryEditor.question.fetch({success:function(){return Coconut.resultSummaryEditor.render()}})}})},e.prototype.editQuestion=function(t){return this.userLoggedIn({success:function(){return null==Coconut.designView&&(Coconut.designView=new DesignView),Coconut.designView.render(),Coconut.designView.loadQuestion(unescape(t))}})},e.prototype.deleteQuestion=function(t){return this.userLoggedIn({success:function(){return Coconut.questions.get(unescape(t)).destroy({success:function(){return Coconut.menuView.render(),Coconut.router.navigate("manage",!0)}})}})},e.prototype.sync=function(){return this.userLoggedIn({success:function(){return null==Coconut.syncView&&(Coconut.syncView=new SyncView),Coconut.syncView.render()}})},e.prototype.syncSend=function(){return Coconut.router.navigate("",!1),this.userLoggedIn({success:function(){return null==Coconut.syncView&&(Coconut.syncView=new SyncView),Coconut.syncView.sync.sendToCloud({success:function(){return Coconut.syncView.update()}})}})},e.prototype.syncGet=function(){return Coconut.router.navigate("",!1),this.userLoggedIn({success:function(){return null==Coconut.syncView&&(Coconut.syncView=new SyncView),Coconut.syncView.sync.getFromCloud()}})},e.prototype.manage=function(){return this.adminLoggedIn({success:function(){return null==Coconut.manageView&&(Coconut.manageView=new ManageView),Coconut.manageView.render()}})},e.prototype.newResult=function(t){return this.userLoggedIn({success:function(){return null==Coconut.questionView&&(Coconut.questionView=new QuestionView),Coconut.questionView.result=new Result({question:unescape(t)}),Coconut.questionView.model=new Question({id:unescape(t)}),Coconut.questionView.model.fetch({success:function(){return Coconut.questionView.render()}})}})},e.prototype.editResult=function(t){return this.userLoggedIn({success:function(){return null==Coconut.questionView&&(Coconut.questionView=new QuestionView),Coconut.questionView.readonly=!1,Coconut.questionView.result=new Result({_id:t}),Coconut.questionView.result.fetch({success:function(){return Coconut.questionView.model=new Question({id:Coconut.questionView.result.question()}),Coconut.questionView.model.fetch({success:function(){return Coconut.questionView.render()}})}})}})},e.prototype.deleteResult=function(t,e){return this.userLoggedIn({success:function(){return null==Coconut.questionView&&(Coconut.questionView=new QuestionView),Coconut.questionView.readonly=!0,Coconut.questionView.result=new Result({_id:t}),Coconut.questionView.result.fetch({success:function(){return"confirmed"===e?Coconut.questionView.result.destroy({success:function(){return Coconut.menuView.update(),Coconut.router.navigate("show/results/"+escape(Coconut.questionView.result.question()),!0)}}):(Coconut.questionView.model=new Question({id:Coconut.questionView.result.question()}),Coconut.questionView.model.fetch({success:function(){return Coconut.questionView.render(),$("#content").prepend("<h2>Are you sure you want to delete this result?</h2> <div id='confirm'> <a href='#delete/result/"+t+"/confirmed'>Yes</a> <a href='#show/results/"+escape(Coconut.questionView.result.question())+"'>Cancel</a> </div>"),$("#confirm a").button(),$("#content form").css({"background-color":"#333",margin:"50px",padding:"10px"}),$("#content form label").css({color:"white"})}}))}})}})},e.prototype.design=function(){return this.userLoggedIn({success:function(){return $("#content").empty(),null==Coconut.designView&&(Coconut.designView=new DesignView),Coconut.designView.render()}})},e.prototype.showResults=function(t){return this.userLoggedIn({success:function(){return null==Coconut.resultsView&&(Coconut.resultsView=new ResultsView),Coconut.resultsView.question=new Question({id:unescape(t)}),Coconut.resultsView.question.fetch({success:function(){return Coconut.resultsView.render()}})}})},e.prototype.map=function(){return this.userLoggedIn({success:function(){return null==Coconut.mapView&&(Coconut.mapView=new MapView),Coconut.mapView.render()}})},e.prototype.startApp=function(){return Coconut.config=new Config,Coconut.config.fetch({success:function(){return $("#footer-menu").html("<center> <span style='font-size:75%;display:inline-block'> <span id='district'></span><br/> <span id='user'></span> </span> <a href='#login'>Login</a> <a href='#logout'>Logout</a> <a id='reports' href='#reports'>Reports</a> <a id='manage-button' style='display:none' href='#manage'>Manage</a> &nbsp; <a href='#sync/send'>Send data (last done: <span class='sync-sent-status'></span>)</a> <a href='#sync/get'>Update (last done: <span class='sync-get-status'></span>)</a> <a href='#help'>Help</a> <span style='font-size:75%;display:inline-block'>Version<br/><span id='version'></span></span> </center>"),$("[data-role=footer]").navbar(),$("#application-title").html(Coconut.config.title()),Coconut.loginView=new LoginView,Coconut.questions=new QuestionCollection,Coconut.questionView=new QuestionView,Coconut.menuView=new MenuView,Coconut.syncView=new SyncView,Coconut.menuView.render(),Coconut.syncView.update(),Backbone.history.start()},error:function(){return null==Coconut.localConfigView&&(Coconut.localConfigView=new LocalConfigView),Coconut.localConfigView.render()}})},e}(Backbone.Router),Coconut={},Coconut.router=new Router,Coconut.router.startApp(),Coconut.debug=function(t){return console.log(t),$("#log").append(t+"<br/>")};